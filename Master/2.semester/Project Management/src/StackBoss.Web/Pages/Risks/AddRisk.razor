@page "/AddRisk"
@inject RiskService riskService
@inject ProjectService projectService
@inject NavigationManager NavigationManager


<AuthorizeView  Context="Auth">

<div class="container">
<EditForm Model="@Risk" OnValidSubmit="@Save">
        <DataAnnotationsValidator/>
        <div class="row">
            <div class="col-md-6">
                <h2>New Risk</h2>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">

                <div class="form-group">
                    <label class="w-100">
                        Name:
                        <InputText @bind-Value="@Risk.Name" class="form-control"/>
                        <small class="form-text text-danger">
                            <ValidationMessage For="@(() => Risk.Name)"/>
                        </small>
                    </label>
                </div>

                <div class="form-group">
                    <label class="w-100">
                        Category:
                        <InputSelect @bind-Value="@Risk.Category" class="form-control">
                               @foreach (var cat in Enum.GetValues(typeof(Category)))
                                {
                                    <option value="@cat">@cat</option>
                                }
                        </InputSelect>
                          <small class="form-text text-danger">
                            <ValidationMessage For="@(() => Risk.Category)"/>
                        </small>
                    </label>
                </div>

                 <div class="form-group">
                    <label class="w-100">
                        Threat:
                        <InputText @bind-Value="@Risk.Threat" class="form-control"/>
                    </label>
                </div>

                 <div class="form-group">
                    <label class="w-100">
                        Starters:
                        <InputText @bind-Value="@Risk.Starters" class="form-control"/>
                    </label>
                </div>

                 <div class="form-group">
                    <label class="w-100">
                        Reaction:
                        <InputText @bind-Value="@Risk.Reaction" class="form-control"/>
                    </label>
                </div>

                 <div class="form-group">
                    <label class="w-100">
                        Owner:
                        <InputText @bind-Value="@Risk.Owner" class="form-control"/>
                    </label>
                </div>

                <div class="form-group">
                    <label class="w-100">
                        Description:
                        <InputText @bind-Value="@Risk.Description" class="form-control"/>
                    </label>
                </div>

            </div>
            <div class="col-md-6">

                  <div class="form-group">
                    <label class="w-100">
                        Probability:
                        <InputSelect @bind-Value="@Risk.Probability" class="form-control">
                               @foreach (var cat in Enum.GetValues(typeof(Probability)))
                                {
                                    <option value="@cat">@cat</option>
                                }
                        </InputSelect>
                    </label>
                </div>

                 <div class="form-group">
                    <label class="w-100">
                        Consequences:
                        <InputSelect @bind-Value="@Risk.Consequences" class="form-control">
                               @foreach (var cat in Enum.GetValues(typeof(Consequences)))
                                {
                                    <option value="@cat">@cat</option>
                                }
                        </InputSelect>
                    </label>
                </div>

                 <div class="form-group">
                    <label class="w-100">
                        Risk evaluation:

                        @{
                            Risk.RiskEvaluation = ((int)Risk.Consequences) * ((int)Risk.Probability);
                         }
                        <p class="form-control">@Risk.RiskEvaluation </p>
                       
                    </label>
                </div>

                <div class="form-group">
                    <label class="w-100">
                        State:
                        <InputSelect @bind-Value="@Risk.State" class="form-control">
                               @foreach (var cat in Enum.GetValues(typeof(State)))
                                {
                                    <option value="@cat">@cat</option>
                                }
                        </InputSelect>
                    </label>
                </div>

             

                 @* <div class="form-group">
                    <label class="w-100">
                        Modified state date:
                        <InputDate @bind-Value="@Risk.ModifiedStateDate" class="form-control"/>
                    </label>
                </div>

                  <div class="form-group">
                    <label class="w-100">
                        Reaction date:
                        <InputDate @bind-Value="@Risk.ReactionDate" class="form-control"/>
                    </label>
                </div>*@

                 <div class="form-group">
                    <label class="w-100">
                        Select Project:
                    </label>
                        <InputSelect @bind-Value="@SelectedProjectId" class="form-control" >
                            @foreach (var proj in ProjectList)
                            {
                                @if(proj.Id == 1)
                                {
                                    <option value="@proj.Id" selected="selected">@proj.Name</option>
                                }
                                else
                                {
                                    <option value="@proj.Id">@proj.Name</option>
                                }
                            }
                        </InputSelect>
                         
                </div>
              
            </div>
        </div>

        <hr> 
        <div class="row">
            <div class="col-md-6">
                <button type="submit" class="btn btn-success" style="margin-bottom: 2.5em">Add</button>
            </div>
    @*<div class="col-md-6 d-flex justify-content-end">
            <button  class="btn btn-primary"  @onclick="@Cancel" style="margin-bottom: 2.5em">Cancel</button>
        </div>    *@
          
        </div>
</EditForm>
 </div>
 </AuthorizeView>

@code {
    RiskEntity Risk = new RiskEntity();
        List<ProjectEntity> ProjectList = new List<ProjectEntity>();


    public string SelectedProjectId { get; set; } = "1";
        protected override async Task OnInitializedAsync()
        {
            ProjectList = await projectService.GetAllProjectsAsync();
        }
        private async Task Save()
        {
             Risk.ProjectId = Int32.Parse(SelectedProjectId);

             Risk.CreatedDate = DateTime.Now;
             Risk.ModifiedStateDate = DateTime.Now;
             if (Risk.Reaction != null) Risk.ReactionDate = DateTime.Now;
             await riskService.InsertRiskAsync(Risk);
             var customProjectId = string.Format("{0:000}", Risk.ProjectId); 
             var customRiskId = string.Format("{0:00}", Risk.Id);
             Risk.CustomId = $"P{customProjectId}_R{customRiskId}";
             await riskService.UpdateRiskAsync(Risk);
             NavigationManager.NavigateTo("Risks");
        }
        void Cancel()
        {
            NavigationManager.NavigateTo("Risks");
        }
}